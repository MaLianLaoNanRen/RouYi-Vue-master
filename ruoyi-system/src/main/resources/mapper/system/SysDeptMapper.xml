<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysDeptMapper">

    <resultMap type="SysDept" id="SysDeptResult">
        <id property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectDeptVo">
        SELECT d.id,
               d.parent_id,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               d.create_by,
               d.create_time
            FROM sys_dept d
    </sql>

    <select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        <where>
            <if test="id != null and id != ''">
                AND id = #{id}
            </if>
            <if test="parentId != null and parentId != ''">
                AND parent_id = #{parentId}
            </if>
            <if test="deptName != null and deptName != ''">
                AND dept_name like concat('%', #{deptName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptListByRoleId" resultType="String">
        select d.id
        from sys_dept d
        left join sys_role_dept rd on d.id = rd.dept_id
        where rd.role_id = #{roleId}
        <if test="deptCheckStrictly">
            and d.id not in (select d.parent_id from sys_dept d inner join sys_role_dept rd on d.id = rd.dept_id and rd.role_id = #{roleId})
        </if>
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptById" parameterType="String" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where id = #{id}
    </select>

    <select id="checkDeptExistUser" parameterType="String" resultType="int">
        SELECT count(1)
            FROM sys_user
            WHERE id = #{id}
    </select>

    <select id="hasChildByDeptId" parameterType="String" resultType="int">
        SELECT count(1)
            FROM sys_dept
            WHERE parent_id = #{id}
            LIMIT 1
    </select>

    <select id="selectChildrenDeptById" parameterType="String" resultMap="SysDeptResult">
        SELECT *
            FROM sys_dept
            WHERE find_in_set(#{id}, ancestors)
    </select>

    <select id="selectNormalChildrenDeptById" parameterType="String" resultType="int">
        SELECT count(*)
            FROM sys_dept
            WHERE status = 0
              AND find_in_set(#{id}, ancestors)
    </select>

    <select id="checkDeptNameUnique" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where dept_name=#{deptName} and parent_id = #{parentId} limit 1
    </select>

    <insert id="insertDept" parameterType="SysDept">
        insert into sys_dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="parentId != null and parentId != ''">parent_id,</if>
            <if test="deptName != null and deptName != ''">dept_name,</if>
            <if test="ancestors != null and ancestors != ''">ancestors,</if>
            <if test="orderNum != null and orderNum != ''">order_num,</if>
            <if test="leader != null and leader != ''">leader,</if>
            <if test="phone != null and phone != ''">phone,</if>
            <if test="email != null and email != ''">email,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id == null">replace(uuid(), '-', ''),</if>
            <if test="id != null and id != ''">#{id},</if>
            <if test="parentId != null and parentId != ''">#{parentId},</if>
            <if test="deptName != null and deptName != ''">#{deptName},</if>
            <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
            <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
            <if test="leader != null and leader != ''">#{leader},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
            <if test="email != null and email != ''">#{email},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
        </trim>
    </insert>

    <update id="updateDept" parameterType="SysDept">
        update sys_dept
        <set>
            <if test="parentId != null and parentId != ''">parent_id = #{parentId},</if>
            <if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
        </set>
        where id = #{id}
    </update>

    <update id="updateDeptChildren" parameterType="java.util.List">
        update sys_dept set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.ancestors}
        </foreach>
        where id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>

    <update id="updateDeptStatusNormal" parameterType="String">
        update sys_dept set status = '0' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deleteDeptById" parameterType="String">
        DELETE
            FROM sys_dept
            WHERE id = #{id}
    </delete>

</mapper> 